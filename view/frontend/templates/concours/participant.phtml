<?php
// Get the URL of the current page
$currentPageUrl = $this->getUrl('*/*/*', ['_current' => true, '_use_rewrite' => true]);
// Remove last index/ at the end
$currentPageUrl = str_replace('/index/', '/', $currentPageUrl);

// Init variables
$authfailed = 0;
$notfound = 0;
$serverError = 0;
$participationid = null;
$contestData = [];
$navButtons = [];
$pageUrl = null;

$isLogged = false;
$handle = null;
$firstname = null;

try {
	$participationid = $block->getData('participationid');
	$contestData = $block->fetchParticipationById($participationid);
	$navButtons = $block->fetchNavButtons();

	if (isset($contestData['code'])) {
		if ($contestData['code'] == 'AUTH_401') {
			throw new Exception('Unauthorized');
		}
	} else if (!$contestData) {
		throw new Exception('Not found');
	}

	$isLogged = $block->isCustomerLoggedIn();
	if ($isLogged) {
		$customer = $block->getCustomerData();	
		$handle = $customer['customer_nickname'];
		$firstname = $customer['customer_fname'];
	}

	// Get the URL of the current page
	$pageUrl = $this->getUrl('contestio/concours/index/partid/'.$participationid.'');
} catch (Exception $e) {
	if ($e->getMessage() === 'Unauthorized') {
		$authfailed = 1;
	} else if ($e->getMessage() === 'Not found') {
		$notfound = 1;
	} else {
		$serverError = 1;
	}
}

if ($serverError) {
	echo $this->getLayout()->createBlock("Magento\Framework\View\Element\Template")->setTemplate("Contestio_Connect::error_500.phtml")->toHtml();
	return;
} elseif ($authfailed) {
	echo $this->getLayout()->createBlock("Magento\Framework\View\Element\Template")->setTemplate("Contestio_Connect::error_401.phtml")->toHtml();
	return;
} elseif ($notfound) {
	echo $this->getLayout()->createBlock("Magento\Framework\View\Element\Template")->setTemplate("Contestio_Connect::error_404.phtml")->toHtml();
	return;
}
?>

<div class="contestio-main-container">
	<div class="contestio_overlay hidden">
		<?php echo $this->getLayout()->createBlock("Magento\Framework\View\Element\Template")->setTemplate("Contestio_Connect::login_form.phtml")->toHtml() ?>
	
		<aside id="dialogFlag" class="hidden">
			<button aria-label="close" class="closeModalFlag x">‚ùå</button>
			<h2>Signalement</h2>
			
			<p>
				Vous √™tes sur le point de signaler cette publication pour <span class="reason"></span>.
				<br><br>
				Voulez-vous continuer ?
			</p>

			<footer>
				<button class="cancel closeModalFlag">
					Annuler
				</button>

				<button
					id="flagButton"
					class="confirm"
				>
					Oui, signaler
				</button>
			</footer>
		</aside>
	</div>

	<!-- Navbar with custom buttons -->
	<div class="contestio-header contestio-btn-section">
		<p id="contestio-header-text">
			<?php if ($handle): ?>
				Bonjour <span><?= $handle ?></span> üëã
			<?php endif; ?>
		</p>

		<ul>
			<?php foreach ($navButtons as $button) : ?>
				<!-- Print custom button styles -->
				<style>
					/* Default */
					<?php if (isset($button['styles'])): ?>
						a#<?= $button['slug'] ?> {
							<?php echo $button['styles']; ?>
						}
					<?php endif; ?>

					/* Hover */
					<?php if (isset($button['hover'])): ?>
						a#<?= $button['slug'] ?>:hover,
						a#<?= $button['slug'] ?>.active {
							<?php echo $button['hover']; ?>
						}
					<?php endif; ?>

					/* Focus and active */
					<?php if (isset($button['focus'])): ?>
						a#<?= $button['slug'] ?>:focus,
						a#<?= $button['slug'] ?>:active {
							<?php echo $button['focus']; ?>
						}
					<?php endif; ?>
				</style>

				<?php
					$url = $this->getUrl('contestio/accueil');
					$isActive = strpos($currentPageUrl, $this->getUrl('contestio/accueil')) === 0;

					// D√©termine l'URL √† utiliser
					if ($button['navUrl'] === 'contest') {
						$url = $this->getUrl('contestio/concours');
						$isActive = strpos($currentPageUrl, $this->getUrl('contestio/concours')) === 0;
					} elseif ($button['navUrl'] === 'survey') {
						$url = $this->getUrl('contestio/sondage');
						$isActive = strpos($currentPageUrl, $this->getUrl('contestio/sondage')) === 0;
					}
				?>

				<a
					id="<?= $button['slug'] ?>"
					href="<?= $url ?>"
					class="basic-button <?= $isActive ? 'active' : '' ?>"
				>
					<?= $button['text'] ?>
				</a>
			<?php endforeach; ?>
		</ul>
	</div>
	<!-- / Navbar with custom buttons -->

	<?php if (isset($contestData['participation'])) : ?>
		<?php
			$participation = $contestData['participation'];
			$participation['shareUrl'] = $pageUrl . "?participationId=" . $participation['_id'];
			$isMyParticipation = isset($participation['isMyParticipation']) && $participation['isMyParticipation'];
			$votedToday = isset($contestData['votedToday']) && $contestData['votedToday'];
		?>

		<div class="contest_preview twoPart participation mt-7" id="previewId">
			<!-- <div class="main_sep"> -->
				<div class="firstPart">
					<img
						class='postImage partImage'
						src="<?php echo $participation['presignedUrl'] ?>"
						alt="Participation"
					>
				</div>

				<div class="secondPart">
					<h2>
						<?php if ($isMyParticipation): ?>
							<span class="myParticipation">Votre participation</span>
						<?php else: ?>
							Participation de <strong class="postUser"><?= $participation['pseudo'] ?? "nc" ?></strong>
						<?php endif; ?>
					</h2>

					<p class="postDescription">
						<?= $participation['description'] ?? "nc" ?>
					</p>

					<div class="contestio_dialog_body">
						<div class="actions_div">
							<div class="likes">
								<img
									class="canLike"
									id="likeImg"
									width="30"
									height="30"
									src="<?php echo $this->getViewFileUrl('Contestio_Connect::images/' . ($participation['liked'] ? 'heart.png' : 'heart-nofill.png')); ?>"
									alt="Likes"
									data-filled="<?php echo $this->getViewFileUrl('Contestio_Connect::images/heart.png'); ?>"
									data-empty="<?php echo $this->getViewFileUrl('Contestio_Connect::images/heart-nofill.png'); ?>"
								/>
								<span class="postLikes">
									<?= $participation['likes'] ?? "nc" ?>
								</span>
							</div>
	
							<div class="rank">
								<span class="postRank">
									<?= $participation['rank'] ?? "nc" ?>
								</span>

								<?php
									$rankImage = $participation['rank'] === 1 ? 'medal_gold.webp' : ($participation['rank'] === 2 ? 'medal_silver.webp' : ($participation['rank'] === 3 ? 'medal_bronze.webp' : 'podium.png'));
								?>

								<img
									width="30"
									height="30"
									src="<?php echo $this->getViewFileUrl('Contestio_Connect::images/'.$rankImage); ?>"
									alt="Classement"
								/>
							</div>
						</div>

						<?php if ($isMyParticipation): ?>
							<button
								type="submit"
								id="voteButton"
								class="redirect"
								data-url="<?= $this->getUrl('contestio/concours/') ?>"
							>
								<span><?= $block->escapeHtml(__('Modifier')) ?></span>
							</button>
						<?php else: ?>
							<button
								type="submit"
								id="voteButton"
								data-contest="<?= $contestData['_id'] ?>"
								data-participation="<?= $participation['_id'] ?>"
								<?= $votedToday || $participation['liked'] ? 'disabled' : '' ?>
							>
								<span><?= $block->escapeHtml(__($participation['liked'] ? 'D√©j√† vot√©' : 'Voter')) ?></span>
							</button>

							<p class="response"></p>
						<?php endif; ?>

						<p class="time-left-msg timeLeft hidden">
							Prochain vote dans <span class="time-left"></span>
						</p>

						<p class="time-left-msg votedTodayMsg <?php echo $votedToday === false ? 'hidden' : '' ?>">
							Vous avez d√©j√† vot√© aujourd'hui, prochain vote dans <span class="time-left"></span>
						</p>
					</div>

					<footer class="<?= $isMyParticipation ? 'centered' : '' ?>">
						<ul class="socials_links" data-objectid="<?= $participation['_id'] ?>">
							<li class="fb-link">
								<a
									class="facebook"
									title="facebook"
									href="https://www.facebook.com/sharer/sharer.php?u=<?= $participation['shareUrl'] ?>"
									target="_blank"
								>
									<img width="30" height="30" src="<?php echo $this->getViewFileUrl('Contestio_Connect::images/share-facebook.svg'); ?>" alt="" />
								</a>
							</li>
							<li class="messenger-link">
								<a
									class="messenger"
									title="messenger"
									href="fb-messenger://share/?link=<?= $participation['shareUrl'] ?>"
									target="_blank"
								>
									<img width="30" height="30" src="<?php echo $this->getViewFileUrl('Contestio_Connect::images/share-messenger.svg'); ?>" alt="" />
								</a>
							</li>
							<li class="twitter-link">
								<a
									class="twitter"
									title="twitter"
									href="https://twitter.com/intent/tweet?url=<?= $participation['shareUrl'] ?>"
									target="_blank"
								>
									<img width="30" height="30" src="<?php echo $this->getViewFileUrl('Contestio_Connect::images/share-twitter.svg'); ?>" alt="" />
								</a>
							</li>
							<li class="copy-link">
								<a
									href="#"
									title="clipboard"
									class='copybutton'
									data-participation="<?= $participation['_id'] ?>"
								>
								<img width="30" height="30" src="<?php echo $this->getViewFileUrl('Contestio_Connect::images/copy-code.svg'); ?>" alt="" />
							</a>
							</li>
						</ul>

						<?php if ($isMyParticipation === false): ?>
							<div class="flag_button">
								<button
									class="report-link transparent"
									type="button"
									data-user="<?= $participation['pseudo'] ?>"
									data-participation="<?= $participation['_id'] ?>"
									data-contest="<?= $contestData['_id'] ?>"
								>
									<img width="30" height="30" src="<?php echo $this->getViewFileUrl('Contestio_Connect::images/report-flag.svg'); ?>" alt="" />
								</button>
							</div>
						<?php endif; ?>
					</footer>
				</div>
			<!-- </div> -->
		</div>
	<?php endif; ?>

	<?php echo $this->getLayout()->createBlock("Magento\Framework\View\Element\Template")->setTemplate("Contestio_Connect::footer.phtml")->toHtml() ?>
</div>

<script>
require(['jquery'], function($) {
	const recordShare = (platform, objectId) => {
		$.ajax({
			url: "<?php echo $block->getUrl('contestio/ajax/socialshare') ?>",
			type: 'POST',
			data: JSON.stringify({ platform, objectId }),
			contentType: 'application/json'
		});
	}

	let lastScrollTop = 0;

	// Set pseudo in navbar if logged in
	<?php if($handle): ?>
		$('#contestio-header-text').html('Bonjour <span><?= $handle ?></span> üëã');
	<?php else: ?>
		$('#contestio-header-text').html('');
	<?php endif; ?>

	// Close Modal for report
	$('.closeModalFlag').click(function(){
		// Hide modal and overlay
		$('#dialogFlag').addClass('hidden');
		$('.contestio_overlay').addClass('hidden');

		// Remove class from main container
		$('.contestio-main-container').removeClass('contestio_overlay_open');

		// Scroll to lastScrollTop
		window.scrollTo(0, lastScrollTop);
	});

	// Submit the like form
	$(document).on("click", '#voteButton', function(e) {
		e.preventDefault();

		// Check if class redirect is present
		if ($(this).hasClass('redirect')) {
			window.location.href = $(this).attr('data-url');
			return false;
		}

		// Check if user is logged
		<?php if(!$isLogged): ?>
			// Show modal and overlay
			$('.contestio_overlay').removeClass('hidden');

			// Add class from main container
			$('.contestio-main-container').addClass('contestio_overlay_open');

			// Show login form
			$('#dialogLogin').removeClass('hidden');
			return false;
		<?php endif; ?>

		// If user is logged but no pseudo, show the pseudo form
		<?php if(!$handle): ?>
			// Show modal and overlay
			$('.contestio_overlay').removeClass('hidden');

			// Add class from main container
			$('.contestio-main-container').addClass('contestio_overlay_open');

			// Hide participation form, show pseudo form
			$('#dialogPseudo').find('.firstName').html('<?= $firstname ?>');
			$('#dialogParticipation').addClass('hidden');
			$('#dialogPseudo').removeClass('hidden');
			return false;
		<?php endif; ?>

		$('body').trigger('processStart');

		const addvoteUrl = "<?php echo $block->getUrl('contestio/ajax/addlike') ?>";

		$.ajax({
			type: "POST",
			url: addvoteUrl,
			data: {
				participationId: $(this).attr('data-participation'),
				contestId: $(this).attr('data-contest')
			},
			dataType: "json",
			success: function(data) {
				console.log(data);
				if(data.success === 'true') {
					const currentValue = parseInt($(document).find('#previewId .postLikes').text());

					// Show the time left
					$(document).find('#previewId .timeLeft').removeClass('hidden');
					// Disable the button
					$(document).find('#previewId button[type="submit"]').prop('disabled', true);

					// Remove canLike class
					likeImg.classList.remove('canLike');

					if(data.status == 400) {
						$(document).find('#previewId .response').html('<b class="error">'+data.message+'</b>');
					} else {
						$(document).find('#previewId button[type="submit"]').text('Vote ajout√©');

						// Update heart icon
						const likeImg = $('#previewId #likeImg')[0];
						likeImg.setAttribute('src', likeImg.getAttribute('data-filled'));

						// Remove canLike class
						likeImg.classList.remove('canLike');

						// Update the like count
						$(document).find('#previewId .postLikes').text(currentValue + 1);

						// Disable the button
						$(document).find('#previewId button[type="submit"]').prop('disabled', true);
					}
				} else {
					$(document).find('#previewId .response').html("<b class='error'>Nous rencontrons un probl√®me, veuillez r√©essayer plus tard.</b>");
				}
				$(document).find('#previewId').addClass('reload');
				$('body').trigger('processStop');
			},
			error: function(error) {
				console.error(error);
				$(document).find('#previewId .response').html("<b class='error'>Nous rencontrons un probl√®me, veuillez r√©essayer plus tard.</b>");
				$('body').trigger('processStop');
			}
		});
		return false; // Prevent the default form submission
	});

	// ! Flag (report) modal
	// Open Flag modal
	$(document).on("click", '#previewId .report-link', function(e) {
		e.preventDefault();

		// Show modal and overlay
		$('.contestio_overlay').removeClass('hidden');

		// Add class from main container
		$('.contestio-main-container').addClass('contestio_overlay_open');

		// Update lastScrollTop
		lastScrollTop = $(window).scrollTop();
		
		// Scroll top if mobile
		if (window.innerWidth < 768) {
			window.scrollTo(0, 0);
		}

		// Check if user is logged
		<?php if(!$isLogged): ?>
			// Show login form
			$('#dialogLogin').removeClass('hidden');
			return false;
		<?php endif; ?>

		// If user is logged but no pseudo, show the pseudo form
		<?php if(!$handle): ?>
			// Hide participation form, show pseudo form
			$('#dialogPseudo').find('.firstName').html('<?= $firstname ?>');
			$('#dialogPseudo').removeClass('hidden');
			return false;
		<?php endif; ?>

		// Update flagReason hidden field
		const handle = $('#handle').val();
		const userPseudo = $(this).attr('data-user');
		const partId = $(this).attr('data-participation');
		const contestId = $(this).attr('data-contest');

		// Update #dialogFlag .user
		$('#dialogFlag .user').html(userPseudo);

		// Update #dialogFlag hidden fields
		$('#dialogFlag .participationId').val(partId);
		$('#dialogFlag .contestId').val(contestId);

		// Select the first reason
		$('#dialogFlag #flagReason').val('Contenu inappropri√©');

		// Reset flagReasonOther
		$('#dialogFlag #flagReasonOther').val('');
		$('#dialogFlag #flagReasonOtherDiv').addClass('hidden');

		// Clear message
		$('#dialogFlag .error-msg').html('');

		// Reset the button
		$('#flagButton').prop('disabled', false);
		$('#flagButton').text('Signaler');

		// Show flag dialog, hide participation dialog
		$('#dialogParticipation').addClass('hidden');
		$('#dialogFlag').removeClass('hidden');
	});

	// Listen for flagReason changes and show #flagReasonOther if 'other' is selected
	$(document).on('change', '#flagReason', function() {
		const flagReason = $(this).val();
		const flagReasonOther = $('#flagReasonOtherDiv');

		if (flagReason === 'other') {
			flagReasonOther.removeClass('hidden');
		} else {
			flagReasonOther.addClass('hidden');
		}
	});

	// Trigger report form
	$(document).on('click', '#flagButton', function() {
		$('#flagForm').submit();
	});

	// Submit the flag form
	$(document).on("submit", '#flagForm', function(e) {
		e.preventDefault();

		let reason = $(this).find('#flagReason').val();

		// If the reason is 'other', check if the input is not empty
		const flagReason = $(this).find('#flagReason').val();

		// Check if the reason is valid
		if (flagReason === 'other') {
			const flagReasonOther = $(this).find('#flagReasonOther').val();

			if (!flagReasonOther) {
				$('#dialogFlag .error-msg').html('<b class="error">Veuillez pr√©ciser la raison.</b>');
				return false;
			} else if (flagReasonOther.length < 10) {
				$('#dialogFlag .error-msg').html('<b class="error">La raison doit contenir au moins 10 caract√®res.</b>');
				return false;
			} else if (flagReasonOther.length > 200) {
				$('#dialogFlag .error-msg').html('<b class="error">La raison doit contenir moins de 200 caract√®res.</b>');
				return false;
			}

			reason = flagReasonOther;
		}

		// Texts
		const defaultText = "<?php echo __('Signaler') ?>";
		const loadingText = "<?php echo __('Veuillez patienter...') ?>";

		const loginButton = $('#flagButton');

		loginButton.text(loadingText);
		loginButton.attr("disabled", "disabled");

		try {
			const socialshareUrl = "<?php echo $block->getUrl('contestio/ajax/addflag') ?>";

			$.ajax({
				url: socialshareUrl,
				type: 'POST',
				data: JSON.stringify({
					participationId: $(this).find('.participationId').val(),
					contestId: $(this).find('.contestId').val(),
					reason: reason
				}),
				contentType: 'application/json',
				success: function(data) {
					if(data.success === false || data.error) {
						loginButton.text(defaultText);
						loginButton.removeAttr('disabled');

						// Show error message
						$('#dialogFlag .error-msg').html('<b class="error">'+data.message+'</b>');
					} else {
						loginButton.text('Signal√©');

						$('#dialogFlag .error-msg').html('<b class="success">'+data.message+'</b>');
					}
				},
				error: function(error) {
					console.error(error);

					loginButton.text(defaultText);
					loginButton.removeAttr('disabled');

					$('#dialogFlag .error-msg').html('<b class="error">Une erreur s\'est produite.</b>');
				}
			});
		} catch (error) {
			console.error(error);

			loginButton.text(defaultText);
			loginButton.removeAttr('disabled');
		}
	});

	// Handle the copy button
	$(document).on("click", '.copybutton', function(e) {
		e.preventDefault();
		let partId = $(this).attr('data-participation');

		if (!partId) {
			const form = $(this).closest('form');
			partId = form.find('input[name="participationId"]').val();
		}

		const link = '<?php echo $this->getUrl('contestio/concours/index/'); ?>partid/'+partId;
		
		// Create a temporary input element
		const input = document.createElement('textarea');
		input.value = link;
		document.body.appendChild(input);

		// Select and copy the text inside the input element
		input.select();
		document.execCommand('copy');

		// Remove the input element
		document.body.removeChild(input);

		// Add a small message element to display the notification
		const messageElement = $('<div>').text('Lien copi√©').css({
			'position': 'fixed',
			'bottom': '10px',
			'right': '10px',
			'background': '#333',
			'color': '#fff',
			'padding': '5px 10px',
			'border-radius': '5px'
		}).hide().appendTo('body');

		// Show the message with animation and fade out after 2 seconds
		messageElement.fadeIn(400).delay(2000).fadeOut(400);
	});

	$(document).on("click", '.socials_links a', function() {
		const platform = $(this).attr("title");
		const objectId = $(this).closest('ul').attr('data-objectid');

		recordShare(platform, objectId);
	});

	// Calculate time left for next vote and update the text every second
	setInterval(() => {
		// Time left = time until tomorrow 00:00:00
		const now = new Date();
		const tomorrow = new Date(now);
		tomorrow.setDate(tomorrow.getDate() + 1);
		tomorrow.setHours(0, 0, 0, 0);
		const timeLeft = Math.floor((tomorrow - now) / 1000);

		const hour = Math.floor(timeLeft / 3600);
		const minute = Math.floor(timeLeft % 3600 / 60);
		const second = timeLeft % 60;

		// Update the text
		$('.time-left').text(
			hour > 0
			? hour + 'h '
			: minute > 0
			? minute + 'm '
			: second + 's'
		);
	}, 1000);
});
</script>
